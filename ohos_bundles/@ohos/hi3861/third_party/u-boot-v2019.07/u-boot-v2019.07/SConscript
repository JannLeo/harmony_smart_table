#!/usr/bin/env python3
# coding=utf-8

import os
from scripts import common_env
from scripts.mk_prim_xml_step1 import create_file_id_dic
Import('env')
Import('env_cfg')
Import('module')

module_path = env_cfg.get_module_dir(module)
obj_path = env_cfg.obj_path
module_libs = env_cfg.get_module_libs(module)
libs = []

env = env.Clone()
env_cfg.append_environs(env, module)
common_env.print_log_env(env, env_cfg.get_module_dir(module))

file_id_dict = None
file = os.path.join(env_cfg.root, module_path, 'file_id.cfg')
if not os.path.exists(file):
    file_id_dict = None
else:
    file_id_dict = create_file_id_dic(file)

for lib in module_libs:
    print('lib_name:',lib)
    src_path = module_libs[lib]
    objs = []
    for src in src_path:
        objs += env.SConscript(os.path.join(src, 'SConscript'), {'env':env, 'id_dict':file_id_dict}, variant_dir = os.path.join('#', obj_path, module_path, src), duplicate = 0)
    libs += env.Library(lib,sorted(objs))
Return('libs')
